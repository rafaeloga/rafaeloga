{"version":"NotebookV1","origId":3623476344927442,"name":"5.3 Lab - Data Munging","language":"sql","commands":[{"version":"CommandV1","origId":3623476344927443,"guid":"3ebfbc9e-25e1-44fb-9aaa-01dac36c4146","subtype":"command","commandType":"auto","position":1.0,"command":"\n%md-sandbox\n\n<div style=\"text-align: center; line-height: 0; padding-top: 9px;\">\n  <img src=\"https://databricks.com/wp-content/uploads/2018/03/db-academy-rgb-1200px.png\" alt=\"Databricks Learning\" style=\"width: 600px\">\n</div>","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926139,"submitTime":1614887926139,"finishTime":1614887926143,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c4bbaf34-8ade-4d32-8c36-4f1f2daf7b03"},{"version":"CommandV1","origId":3623476344927444,"guid":"251ea98d-cc9d-4491-88ab-92b82a08cd2c","subtype":"command","commandType":"auto","position":2.0,"command":"%md\n# Lab 2 - Data Munging\n## Module 5 Assignment\n\nIn this exercise, you will be working with mock data meant to replicate data from an ecommerce mattress seller. Broadly, your work is to clean up and present this data so that it can be used to target geographic areas.  Work through the tasks below and answer the challenge to produce the required report. \n\n## ![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) In this assignment you will: </br>\n\n* Work with hierarchical data\n* Use common table expressions to display data\n* Create new tables based on existing tables\n* Manage working with null values and timestamps\n\nAs you work through the following tasks, you will be prompted to enter selected answers in Coursera. Find the quiz associated with this lab to enter your answers. \n\nRun the cell below to prepare this workspace for the lab. ","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926145,"submitTime":1614887926145,"finishTime":1614887926149,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9984d01a-4fed-4cb2-a5b0-d8c947e3c179"},{"version":"CommandV1","origId":3623476344927445,"guid":"213f82c0-99ac-4a3c-b143-9772023f4b1a","subtype":"command","commandType":"auto","position":3.0,"command":"%run ../Includes/Classroom-Setup","commandVersion":0,"state":"error","results":null,"errorSummary":"Notebook not found: Users/kate.sullivan@databricks.com/Temp Testing/SQLDA/Solutions/Includes/Classroom-Setup. Notebooks can be specified via a relative path (./Notebook or ../folder/Notebook) or via an absolute path (/Abs/Path/to/Notebook). Make sure you are specifying the path correctly.\n\nStacktrace:\n  /Users/kate.sullivan@databricks.com/Temp Testing/SQLDA/Solutions/Module-5/5.3 Lab - Data Munging: sql","error":null,"workflows":[],"startTime":1614887926151,"submitTime":1614887926151,"finishTime":1614887926155,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"374ce0b9-18a4-47d4-9d46-f41d7a151e9a"},{"version":"CommandV1","origId":3623476344927446,"guid":"18a2c773-929d-4f31-8ee5-7d831165dc52","subtype":"command","commandType":"auto","position":4.0,"command":"%md\n## Exercise 1: Create a table\n**Summary:** Create a new table named `eventsRaw` \n\nUse this path to access the data: `/mnt/training/ecommerce/events/events.parquet`\n\nSteps to complete: \n* Make sure this notebook is idempotent by first dropping the table named `eventsRaw`, if it exists already\n* Use the provided path to read in the data","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926158,"submitTime":1614887926158,"finishTime":1614887926161,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2c3c0265-e0ed-4ed6-8db7-1937a5a2330e"},{"version":"CommandV1","origId":3623476344927447,"guid":"2d972e77-44ef-44c8-bb66-5ba24a844fde","subtype":"command","commandType":"auto","position":5.0,"command":"-- ANSWER\nDROP TABLE IF EXISTS eventsRaw;\nCREATE TABLE eventsRaw USING parquet OPTIONS (\n  path \"/mnt/training/ecommerce/events/events.parquet\",\n  header \"true\"\n)","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926163,"submitTime":1614887926163,"finishTime":1614887926167,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6278279c-25c5-4ba9-abd4-ddc4c6e77c49"},{"version":"CommandV1","origId":3623476344927448,"guid":"13c644cd-6bc9-4fc0-a741-a6ed014228ac","subtype":"command","commandType":"auto","position":6.0,"command":"%md\n## Exercise 2: Understand the schema and metadata\n\n**Summary:** Run a command to display this table's schema and other detailed table information\n\nNotice that this table includes `ArrayType` and `StructType` data\n\nSteps to complete: \n* Run a single command to display the table information\n* **Answer the corresponding question in Coursera, in the quiz for this module, regarding the location of this table**","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926169,"submitTime":1614887926169,"finishTime":1614887926173,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"709fa5fe-28ea-407e-b6aa-994a5c5133df"},{"version":"CommandV1","origId":3623476344927449,"guid":"d9c4750d-59b2-4d6b-8406-ec223b2fdff4","subtype":"command","commandType":"auto","position":7.0,"command":"--ANSWER\nDESCRIBE EXTENDED eventsRaw","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926177,"submitTime":1614887926177,"finishTime":1614887926181,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e93693a0-bd31-4e46-b220-36b670440d69"},{"version":"CommandV1","origId":3623476344927450,"guid":"33de675e-aa7e-404a-aee6-5b241d00b29a","subtype":"command","commandType":"auto","position":8.0,"command":"%md\n## Exercise 3: Sample the table\n\n**Summary:** Sample this table to get a closer look at the data\n\nSteps to complete: \n* Sample the table to display up to 1 percent of the records","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926183,"submitTime":1614887926183,"finishTime":1614887926187,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f66e78bc-7fd2-424d-9b21-9e46e83b236e"},{"version":"CommandV1","origId":3623476344927451,"guid":"948fcf1f-42a2-403b-b0aa-71560fa989b5","subtype":"command","commandType":"auto","position":9.0,"command":"--ANSWER\nSELECT * FROM eventsRaw TABLESAMPLE (1 PERCENT)","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926191,"submitTime":1614887926191,"finishTime":1614887926195,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9429db22-b14c-4afd-a233-1f27f1ee3fce"},{"version":"CommandV1","origId":3623476344927452,"guid":"741f9d98-161c-478b-921f-802765835efb","subtype":"command","commandType":"auto","position":10.0,"command":"%md-sandbox\n## Exercise 4: Create a new table\n\n**Summary:** Create a table `purchaseEvents` that includes event data _with_ purchases that has the following schema: \n\n| ColumnName      | DataType| \n|-----------------|---------|\n|purchases        |double   |\n|previousEventDate|date     |\n|eventDate        |date     |\n|city             |string   |\n|state            |string   |\n|userId           |string   |\n\n\n<img alt=\"Caution\" title=\"Caution\" style=\"vertical-align: text-bottom; position: relative; height:1.3em; top:0.0em\" src=\"https://files.training.databricks.com/static/images/icon-warning.svg\"/> The timestamps in this table are meant to match those used in Google Analytics, which measures time to the microsecond. To convert to unixtime, you must divide these values by 1000000 (10e6) before casting to a timestamp. \n\n<img alt=\"Hint\" title=\"Hint\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.3em\" src=\"https://files.training.databricks.com/static/images/icon-light-bulb.svg\"/>&nbsp;**Hint:** Access values from StructType objects using dot notation\n\nSteps to complete: \n* Make sure this notebook is idempotent by first dropping the table, if it exists\n* Create a table based on the existing table\n* Use a common table expression to manipulate your data before writing the `SELECT` statement that will define your table _(Recommended)_\n* Do not include records where the `purchase_revenue_in_usd` is `NULL`\n* Sort the table so that the city and state with the greatest total purchase is listed first ","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926198,"submitTime":1614887926198,"finishTime":1614887926202,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"342fb137-84e2-43b3-ab88-dceb315b5aaa"},{"version":"CommandV1","origId":3623476344927453,"guid":"2d8bcdea-63d7-42ef-bc5a-3ae41131c0d1","subtype":"command","commandType":"auto","position":11.0,"command":"--ANSWER\nDROP TABLE IF EXISTS purchaseEvents;\nCREATE TABLE purchaseEvents \nWITH tempTable AS (\n  SELECT\n    ecommerce.purchase_revenue_in_usd purchases,\n    event_name,\n    CAST(event_previous_timestamp/1000000 AS timestamp) previous_event,\n    CAST(event_timestamp/1000000 AS timestamp) event_time,\n    geo.city city,\n    geo.state state,\n    CAST(user_first_touch_timestamp/1000000 AS timestamp) first_touch_time,\n    user_id\n  FROM\n    eventsRaw\n)\nSELECT\n  purchases,\n  event_name eventName,\n  to_date(previous_event) previousEventDate,\n  to_date(event_time) eventDate,\n  city,\n  state,\n  user_id userId\nFROM\n  tempTable\nWHERE\n  purchases IS NOT NULL","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926204,"submitTime":1614887926204,"finishTime":1614887926208,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"be5d3623-4da9-449d-913d-11a3585898d6"},{"version":"CommandV1","origId":3623476344927454,"guid":"b7ea0801-03de-4cfe-8cfe-537b5da1c716","subtype":"command","commandType":"auto","position":12.0,"command":"%md\n## Exercise 5: Count the records\n\n**Summary:** Count all the records in your new table. \n\nSteps to complete:\n* Write a `SELECT` statement that counts the records in `purchaseEvents`\n* **Answer the corresponding quiz question in Coursera**","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926211,"submitTime":1614887926211,"finishTime":1614887926214,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0d5c02ba-42dc-4487-9e1f-16a79b5cc620"},{"version":"CommandV1","origId":3623476344927455,"guid":"dcd0ef74-fa1e-46c9-bb8e-0b0a7cbc73ac","subtype":"command","commandType":"auto","position":13.0,"command":"--ANSWER\nSELECT count(*) FROM purchaseEvents","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926217,"submitTime":1614887926217,"finishTime":1614887926222,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c9b20af1-3222-4a26-926d-15e8803063ca"},{"version":"CommandV1","origId":3623476344927456,"guid":"4907edd4-58f5-44eb-8c5f-53707b348d1f","subtype":"command","commandType":"auto","position":14.0,"command":"%md\n## Exercise 6: Find the location with the top purchase\n**Summary:** Write a query to produce the city and state where the top purchase amount originated. \n\nSteps to complete: \n* Write a query, sorted by `purchases`, that shows the city and state of the top purchase\n* **Answer the corresponding quiz question in Coursera**","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926224,"submitTime":1614887926224,"finishTime":1614887926227,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3eab1314-dd79-4bfd-aa56-bbb03e263cae"},{"version":"CommandV1","origId":3623476344927457,"guid":"23215b03-0be2-469b-900d-878c2d408e29","subtype":"command","commandType":"auto","position":15.0,"command":"--ANSWER\nSELECT city, state FROM purchaseEvents ORDER BY purchases DESC LIMIT 1","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926229,"submitTime":1614887926229,"finishTime":1614887926233,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"501c84ab-d21b-4537-ae37-80a1341af10f"},{"version":"CommandV1","origId":3623476344927458,"guid":"5ee9fbe7-2ab3-4e9f-9759-bd9694b66ed9","subtype":"command","commandType":"auto","position":16.0,"command":"%md-sandbox\n## Challenge: Produce reports\n\n**Summary:** Use the `purchaseEvents` table to produce queries that explore purchase patterns in the table. Add visualizations to a dashboard to produce one comprehensive customer report.  \n\nSteps to complete: \n* Create visualizations to report on: \n  * total purchases by day of week\n  * average purchases by date of purchase\n  * total purchases by state\n  * Any other patterns you can find in the data\n* Join your table with the data at the path listed below to get list of customers with confirmed email addresses\n* **Answer the corresponding quiz question in Coursera**\n\n<img alt=\"Side Note\" title=\"Side Note\" style=\"vertical-align: text-bottom; position: relative; height:1.75em; top:0.05em; transform:rotate(15deg)\" src=\"https://files.training.databricks.com/static/images/icon-note.webp\"/> Access the data that holds user email addresses. You can read the data from this path: `/mnt/training/ecommerce/users/users.parquet`","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926235,"submitTime":1614887926235,"finishTime":1614887926238,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"918fef27-cd1c-4ffc-bca4-3503c5e0f693"},{"version":"CommandV1","origId":3623476344927459,"guid":"f14103dd-1d8c-4bf8-b348-9708d9f0547f","subtype":"command","commandType":"auto","position":17.0,"command":"--ANSWER\n-- Total purchases by day of week\nSELECT round(sum(purchases), 2) totalPurchases, date_format(eventDate, \"E\") day FROM purchaseEvents GROUP BY (day) ","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926240,"submitTime":1614887926240,"finishTime":1614887926243,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7d19da2a-1cdc-4453-97ca-e25afb11600d"},{"version":"CommandV1","origId":3623476344927460,"guid":"896019fe-8414-46ac-b3d3-b547ed296902","subtype":"command","commandType":"auto","position":18.0,"command":"-- ANSWER\n-- Average purchases by date of purchase\nSELECT ROUND(avg(purchases),2) avgPurchases, eventDate FROM purchaseEvents GROUP BY (eventDate)","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926245,"submitTime":1614887926245,"finishTime":1614887926248,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ca058a95-5785-4754-98f0-5c6a607a44ba"},{"version":"CommandV1","origId":3623476344927461,"guid":"47915846-c8c2-4920-bcdf-ff2d5fb10566","subtype":"command","commandType":"auto","position":19.0,"command":"--ANSWER\n--Total purchases by state\nSELECT\n  ROUND(SUM(purchases), 2) totalPurchases,\n  state\nFROM\n  purchaseEvents\nGROUP BY\n  state","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926250,"submitTime":1614887926250,"finishTime":1614887926253,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ea0312fd-4886-43b3-92d7-5c95f265d242"},{"version":"CommandV1","origId":3623476344927462,"guid":"8c863657-4bd9-4803-a82b-4d520e77199e","subtype":"command","commandType":"auto","position":20.0,"command":"--ANSWER\nDROP TABLE IF EXISTS usersRaw;\nCREATE TABLE usersRaw USING parquet OPTIONS (\n  path \"/mnt/training/ecommerce/users/users.parquet\",\n  header \"true\"\n);","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926255,"submitTime":1614887926255,"finishTime":1614887926258,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7f457dae-d357-4707-b5b9-894e1dd179e4"},{"version":"CommandV1","origId":3623476344927463,"guid":"94b986e2-d6e4-4083-bc93-55eda7628b34","subtype":"command","commandType":"auto","position":21.0,"command":"--ANSWER\n-- Create a confirmed email list\nSELECT\n  purchases, eventDate, city, state, email\nFROM\n  purchaseEvents\n  JOIN usersRaw\nWHERE\n  email IS NOT NULL\n  AND usersRaw.user_id = purchaseEvents.userId","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926261,"submitTime":1614887926261,"finishTime":1614887926264,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3b4bfc7e-d626-49f9-97a0-bba325a65f87"},{"version":"CommandV1","origId":3623476344927464,"guid":"24d7306c-c6ca-4ab2-9bd4-9f276ce72d89","subtype":"command","commandType":"auto","position":22.0,"command":"%run ../Includes/Classroom-Cleanup\n","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926266,"submitTime":1614887926266,"finishTime":1614887926270,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9848bc6b-fcef-4f85-9cbb-649a4881d117"},{"version":"CommandV1","origId":3623476344927465,"guid":"1e902962-149d-431f-af3a-57edd0438673","subtype":"command","commandType":"auto","position":23.0,"command":"%md-sandbox\n&copy; 2020 Databricks, Inc. All rights reserved.<br/>\nApache, Apache Spark, Spark and the Spark logo are trademarks of the <a href=\"http://www.apache.org/\">Apache Software Foundation</a>.<br/>\n<br/>\n<a href=\"https://databricks.com/privacy-policy\">Privacy Policy</a> | <a href=\"https://databricks.com/terms-of-use\">Terms of Use</a> | <a href=\"http://help.databricks.com/\">Support</a>","commandVersion":0,"state":"error","results":null,"errorSummary":"One of the commands could not be parsed","error":null,"workflows":[],"startTime":1614887926272,"submitTime":1614887926272,"finishTime":1614887926275,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"574a7225-8a15-4e60-a3f1-0face9af41b2"}],"dashboards":[],"guid":"9a0bb61f-75cd-40b0-8575-e6e0dd767178","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{"pythonIndentUnit":2}}