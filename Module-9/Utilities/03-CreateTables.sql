{"version":"NotebookV1","origId":3623476344927792,"name":"03-CreateTables","language":"sql","commands":[{"version":"CommandV1","origId":3623476344927793,"guid":"11972b5c-88e5-47e8-8778-214b565f2aa8","subtype":"command","commandType":"auto","position":1.0,"command":"\n%run ./Common","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"717c3a85-8fef-451a-a78d-bd83558b1676"},{"version":"CommandV1","origId":3623476344927794,"guid":"131f74b3-c2f2-4369-9994-d364605e177f","subtype":"command","commandType":"auto","position":2.0,"command":"%python\n\n\n# SETUP\n\n# Coding Challenge Setup\n# Always declare here any variables or functions created for the candidate\nfrom pyspark.sql.types import StructType\n\n\ndef setup():\n  from pyspark.sql.types import StringType\n  from pyspark.sql.types import IntegerType\n  from pyspark.sql.functions import abs, col\n  \n  dfA = (createDummyData(\"joins1a\", seed=\"a\")\n          .withColumn(\"transactionId\", col(\"index\"))\n          .withColumn(\"itemName\", col(\"name\").cast(StringType()))\n          .withColumn(\"itemId\", col(\"id\"))\n          .drop(\"Name\", \"ID\", \"index\", \"Password\", \"Percent\", \"YesNo\", \"UTCTime\", \"Probability\", \"Amount\" )\n           .createOrReplaceTempView(\"purchases\"))\n  \n  dfB = (createDummyData(\"joins1b\", seed=\"a\")\n          .withColumn(\"itemId\", col(\"id\"))\n          .withColumn(\"value\", col(\"Amount\"))\n          .drop(\"Name\", \"ID\", \"index\", \"Password\", \"Percent\", \"YesNo\", \"UTCTime\", \"Probability\", \"Amount\" )\n          .createOrReplaceTempView(\"prices\"))\n  \n  return(dfA, dfB)\n\n\nsetup()\n\ndisplayHTML(\"\"\"\nDeclared the following tables:\n  <li><span style=\"color:green; font-weight:bold\">purchases</span> </li>\n  <li><span style=\"color:green; font-weight:bold\">prices</span> </li>  \n\"\"\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b305e448-da6d-4dd1-93ca-ef74738c1f6c"},{"version":"CommandV1","origId":3623476344927795,"guid":"f6744e28-eab4-45f4-a0ba-3b667c8f6d61","subtype":"command","commandType":"auto","position":3.0,"command":"%python\n\n\n\n# SETUP\n\n# Coding Challenge Setup\nfrom pyspark.sql.types import StructType\n\ndef setup() -> (DataFrame, DataFrame):\n  (spark.createDataFrame([\n  (     \"Excepteur Aute\", 175592,          \"fK7MYqtKVf\", 54.56,   False),\n  (       \"Aliqua Minim\", 968504, \"qI2a5pyV12PecVX2tFE\", 64.60,   True),\n  (  \"Excepteur Officia\", 951040,     \"IKEuSqnwQvm5PY3\", 3.47,   True),\n  (      \"Aliqua Dolore\", 182464,        \"TKA8zpq7yIfH\", 3.52,   False),\n  (     \"Excepteur Enim\", 217000,        \"PIrHip77dC1D\", 23.73,   False),\n  (             \"Ut Sit\", 710872,          \"bGoVHoCIAZ\", 10.77,   True),\n  (\"Excepteur Voluptate\", 375848,   \"2Iypco1iZQIqinMku\", 7.64,   True),\n  (       \"Excepteur Ut\", 326012,      \"9EcCvnKsmhYz8f\", 4.89,   True),\n  (            \"Ut Sint\", 291040,        \"LEZQSnN5I4PB\", 14.93,   True),\n  (         \"Excepteur \", 598656, \"mGljpnEVgxncz3cUvKL\", 43.81,   True),\n  (          \"Ut Dolore\", 459227,   \"yGfyOoHgEKeo4LRCv\", 35.85,   False),\n  (       \"Pariatur Qui\", 262143,         \"wUJlZvpQp93\", 91.72,   True)\n  ], [\"itemName\", \"discountId\", \"discountCode\", \"price\", \"active\"]).createOrReplaceTempView(\"discounts\"))\n\n  (spark.createDataFrame([\n  (\"Pariatur Incididunt\", 76589, 473),\n  (          \"Aliqua Ea\", 67697, 323),\n  (       \"Aliqua Minim\", 21837, 190),\n  (  \"Excepteur Officia\", 12881, 89),\n  (      \"Aliqua Dolore\", 26631, 2199),\n  (     \"Excepteur Enim\", 29337, 325),\n  (             \"Ut Sit\", 23081, 131),\n  (\"Excepteur Voluptate\", 32861, 178),\n  (          \"Aliqua Id\", 83723, 362),\n  (       \"Excepteur Ut\", 29923, 1920),\n  (            \"Ut Sint\", 40948, 381),\n  (          \"Ut Dolore\", 80123, 93)\n  ], [\"itemName\", \"itemId\", \"amount\"]).createOrReplaceTempView(\"products\"))\n\nsetup()\n\ndisplayHTML(\"\"\"\nDeclared the following tables:\n  <li><span style=\"color:green; font-weight:bold\">discounts</span> </li>\n  <li><span style=\"color:green; font-weight:bold\">products</span> </li>  \n\"\"\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"626bacb8-15c3-4ed6-befd-6e17db1b6cda"},{"version":"CommandV1","origId":3623476344927796,"guid":"fe9d5ad4-4b9b-459c-9319-140780bb9581","subtype":"command","commandType":"auto","position":4.0,"command":"%python\n\n\n# SETUP\n\n# Coding Challenge Setup\n# Always declare here any variables or functions created for the candidate\nfrom pyspark.sql.types import StructType\n\ndef setup():\n  (spark.createDataFrame([\n  (     \"Excepteur Aute\", 172),\n  (      \"Aliqua Dolore\", 164),\n  (         \"Excepteur \", 556),\n  (       \"Pariatur Qui\", 213)\n  ], [\"storeName\", \"storeId\"]).createOrReplaceTempView(\"stores\"))\n\n  (spark.createDataFrame([\n  (\"Pariatur Incididunt\", 76589, 473),\n  (          \"Aliqua Ea\", 67697, 323),\n  (       \"Aliqua Minim\", 21837, 190),\n  (  \"Excepteur Officia\", 12881, 89),\n  (      \"Aliqua Dolore\", 26631, 2199),\n  (             \"Ut Sit\", 23081, 131)\n  ], [\"itemName\", \"itemId\", \"amount\"]).createOrReplaceTempView(\"articles\"))\n \nsetup()\n\ndisplayHTML(\"\"\"\nDeclared the following tables: \n  <li><span style=\"color:green; font-weight:bold\">stores</span> </li>\n  <li><span style=\"color:green; font-weight:bold\">articles</span> </li> \n\"\"\")\n","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"98f38938-abd3-4bfd-87bb-6d809db4fe0c"}],"dashboards":[],"guid":"67406a5c-98c2-4fe3-8bf3-09bf39caccfe","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{}}